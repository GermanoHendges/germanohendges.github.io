        let count = 3;
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');

        window.onload = function() {
            const corJogador1 = localStorage.getItem("corJogador1") || "#000";
            const corJogador2 = localStorage.getItem("corJogador2") || "#000";
            const estadioSelecionado = localStorage.getItem("estadioSelecionado") || "";
        
            document.body.style.backgroundImage = estadioSelecionado; // Aplica o fundo do estádio
        
            // Agora você deve usar as cores ao desenhar os jogadores
            update(corJogador1, corJogador2); // Passa as cores como argumentos
        };
        // Configuração dos jogadores com aceleração
        const player1 = { x: 100, y: 305, radius: 20, dx: 0, dy: 0, accel: 0.13, maxSpeed: 3, color1:'red', color2:'red'};
        const player2 = { x: 900, y: 305, radius: 20, dx: 0, dy: 0, accel: 0.13, maxSpeed: 3, color1:'#66c9ed', color2:'black' };
        const ball = { x: 500, y: 305, radius: 15, dx: 0, dy: 0 };
        const field = {width: 900, height: 525 }
        const goleira = {width: 7 ,height: 250}
        const goalWidth = 100;

        let player1Score = 0;
        let player2Score = 0;

        const keys = {
            w: false, a: false, s: false, d: false,       // Controles jogador 1
            ArrowUp: false, ArrowLeft: false, ArrowDown: false, ArrowRight: false, // Controles jogador 2
            Space: false, Shift: false                // Controles de chute
        };

        function drawPlayer(player) {
            const outlineWidth = 2; 
        
            ctx.beginPath();
            ctx.arc(player.x, player.y, player.radius, 0, 2 * Math.PI);
            ctx.fillStyle = player.color1;
            ctx.fill();
            ctx.closePath();
        
            ctx.beginPath();
            ctx.rect(
                player.x - player.radius / 3,
                player.y - player.radius,     
                (player.radius / 3) * 2,     
                player.radius * 2             
            );
            ctx.fillStyle = player.color2;
            ctx.fill();
            ctx.closePath();

            ctx.beginPath();
            ctx.arc(player.x, player.y, player.radius, 0, 2 * Math.PI);
            ctx.lineWidth = outlineWidth * 2;
            ctx.strokeStyle = 'black'; 
            ctx.stroke();
            ctx.closePath();
        }
        

        function drawBall() {
            ctx.beginPath();
            ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);
            ctx.fillStyle = 'white';
            ctx.fill();
            ctx.closePath();
        }

        function drawField() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.strokeStyle = "white";
            ctx.lineWidth = 2;
            ctx.strokeRect(50, 50, field.width, field.height);
            ctx.beginPath();// desenhar o circulo central
            ctx.moveTo(500, 50);
            ctx.lineTo(500, 575);
            ctx.stroke();

            ctx.beginPath();
            ctx.arc(500, 305, 50, 0, Math.PI * 2);
            ctx.stroke();

            ctx.fillStyle = "white";
            ctx.fillRect(50, 250, 7, goalWidth);
            ctx.fillRect(943, 250, 7, goalWidth);
        }

        function iniciaContador() {
            let time = 5*60;
            const countdownElement = document.getElementById("contador");
            const interval = setInterval(() => {
                const minutes = Math.floor(time / 60);
                const seconds = time % 60;

                countdownElement.innerHTML = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;

                time--;

                if (time < 0) {
                    clearInterval(interval);
                    countdownElement.innerHTML = "Tempo esgotado!";
                }
            }, 1000);
        }

        function movePlayer(player, up, left, down, right) {
            // Movimentação com aceleração para cada jogador de acordo com as teclas
            if (keys[right]) player.dx = Math.min(player.dx + player.accel, player.maxSpeed);
            else if (keys[left]) player.dx = Math.max(player.dx - player.accel, -player.maxSpeed);
            else player.dx *= 0.9; // Desaceleração gradualdds

            if (keys[down]) player.dy = Math.min(player.dy + player.accel, player.maxSpeed);
            else if (keys[up]) player.dy = Math.max(player.dy - player.accel, -player.maxSpeed);
            else player.dy *= 0.9; // Desaceleração gradual

            

            player.x += player.dx;
            player.y += player.dy;

            // Limites do campo para os jogadores
            if (player.x - player.radius < 50) player.x = 50 + player.radius;
            if (player.x + player.radius > field.width+50) player.x = field.width+50 - player.radius;
            if (player.y - player.radius < 50) player.y = 50 + player.radius;
            if (player.y + player.radius > field.height+50) player.y = field.height+50 - player.radius;
        }

        function moveBall() {
            ball.x += ball.dx;
            ball.y += ball.dy;

            // Verificação de colisões com as bordas
            if (ball.x - ball.radius < 50) {
                ball.x = 50 + ball.radius;
                ball.dx = -ball.dx;
            } 
            if (ball.x + ball.radius > field.width+50) {
                ball.x = field.width+50 - ball.radius;
                ball.dx = -ball.dx;
            }
            if (ball.y - ball.radius < 50) {
                ball.y = 50 + ball.radius;
                ball.dy = -ball.dy;
            }
            if (ball.y + ball.radius > field.height + 50) {
                ball.y = field.height+50 - ball.radius;
                ball.dy = -ball.dy;
            }

            // Redução gradual da velocidade da bola (simulação de fricção)
            ball.dx *= 0.98;
            ball.dy *= 0.98;

            checkGoal();
        }
        function checkPlayerCollision(player1, player2){
            const distX = player1.x - player2.x;
            const distY = player1.y - player2.y;
            const distance = Math.sqrt(distX * distX + distY * distY);
            if(distance < player1.radius + player2.radius){
                player1.dx = -player1.dx;
                player1.dy = -player1.dy;
                player2.dx = -player2.dx;
                player2.dy = -player2.dy;
            }

        }
        function checkCollision(player, ball, isShooting) {
            const distX = player.x - ball.x;
            const distY = player.y - ball.y;
            const distance = Math.sqrt(distX * distX + distY * distY);

            if (distance  < player.radius + ball.radius ) {
                if (isShooting) {
                    const angle = Math.atan2(distY, distX);
                    ball.dx = -Math.cos(angle) * 8;
                    ball.dy = -Math.sin(angle) * 8;
                } else {
                    const overlap = player.radius + ball.radius - distance;
                    const moveX = (distX / distance) * overlap ;
                    const moveY = (distY / distance) * overlap ;

                    ball.dx -= moveX / 5;
                    ball.dy -= moveY / 5;

                    player.x += moveX / 2;
                    player.y += moveY / 2;
                    
                    
                }
            }
        }

        function checkGoal() {
            if (ball.x - ball.radius < 60 && ball.y > 250 && ball.y < 350) {
                player2Score++;
                afterGoal();
            } else if (ball.x + ball.radius > 940 && ball.y > 250 && ball.y < 350) {
                player1Score++;
                afterGoal();
            }

            document.getElementById('player1Score').textContent = player1Score;
            document.getElementById('player2Score').textContent = player2Score;
        }
        function resetPlayers(){
            player1.x = 100;
            player1.dx = 0;
            player1.dy = 0;
            player1.y = 305;
            player2.x = 900;
            player2.dx = 0;
            player2.dy = 0;
            player2.y = 305;
        }

        function resetBall() {
            ball.x = 500;
            ball.y = 305;
            ball.dx = 0;
            ball.dy = 0;
        }

        function update(corJogador1, corJogador2) {
            movePlayer(player1, 'w', 'a', 's', 'd');
            movePlayer(player2, 'ArrowUp', 'ArrowLeft', 'ArrowDown', 'ArrowRight');
            moveBall();
        
            checkCollision(player1, ball, keys.Space);
            checkCollision(player2, ball, keys.Shift);
        
            drawField();
            drawPlayer(player1);
            drawPlayer(player2);
            drawBall();
            requestAnimationFrame(() => update()); // Passa as cores novamente
        }

        function handleKeyDown(e) {
            if (e.key === 'w') keys.w = true;
            if (e.key === 'a') keys.a = true;
            if (e.key === 's') keys.s = true;
            if (e.key === 'd') keys.d = true;

            if (e.key === 'ArrowUp') keys.ArrowUp = true;
            if (e.key === 'ArrowLeft') keys.ArrowLeft = true;
            if (e.key === 'ArrowDown') keys.ArrowDown = true;
            if (e.key === 'ArrowRight') keys.ArrowRight = true;

            if (e.key === ' ') keys.Space = true;
            if (e.key === 'Shift') keys.Shift = true;
        }

        function handleKeyUp(e) {
            if (e.key === 'w') keys.w = false;
            if (e.key === 'a') keys.a = false;
            if (e.key === 's') keys.s = false;
            if (e.key === 'd') keys.d = false;

            if (e.key === 'ArrowUp') keys.ArrowUp = false;
            if (e.key === 'ArrowLeft') keys.ArrowLeft = false;
            if (e.key === 'ArrowDown') keys.ArrowDown = false;
            if (e.key === 'ArrowRight') keys.ArrowRight = false;

            if (e.key === ' ') keys.Space = false;
            if (e.key === 'Shift') keys.Shift = false;
        }

        document.addEventListener('keydown', handleKeyDown);
        document.addEventListener('keyup', handleKeyUp);

        
    
        function startOff(){
            let tempo = 3;
            const countdownElement = document.getElementById("largada");
            const interval = setInterval(() => {
                countdownElement.innerHTML = time;
                time--;
            }, 1000);
        }
        setInterval(drawCount, 1000);
        setTimeout(function(){
            update();
            iniciaContador();
        },4000);
        function drawCount() {
            // Limpa o canvas
            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);

            ctx.font = "100px Arial";
            ctx.textAlign = "center";
            ctx.textBaseline = "middle";

             ctx.fillText(count, ctx.canvas.width / 2, ctx.canvas.height / 2);
            count--;
        }
        function afterGoal(){
            tocarSomGol();
            resetBall();
            resetPlayers();
            drawCount();
            
        }
        function voltarAoMenu() {
    window.location.href = "../html/menu.html"; // Redireciona para o menu principal
}
function tocarSomGol() {
    
    showTemporaryText();
    const somGol = document.getElementById("somGol");
    somGol.play();
    
}
function showTemporaryText() {
    const textElement = document.getElementById("temporaryText");
    textElement.style.display = "block"; // Torna o elemento visível
    textElement.style.opacity = 1; // Define a opacidade para 1

    setTimeout(() => {
        textElement.style.opacity = 0; // Define a opacidade para 0 após 3 segundos
        setTimeout(() => {
            textElement.style.display = "none"; // Oculta o elemento após a transição
        }, 500); // Aguarda a duração da transição antes de ocultar
    }, 2000); // O texto ficará visível por 3 segundos

}
function defineTimes(time_escolhidoa, jogador){
    switch (time_escolhido){
        case(0):
        }
    }
    function changeStadiumBackground(index) {
        const stadiums = [
            { name: "Arena do Grêmio", image: "url('../imagens/arenagremio.png')" },
            { name: "Beira Rio", image: "url('../imagens/beirario.png')" },
            { name: "Maracanã", image: "url('../imagens/maracana.png')" },
            { name: "Mineirão", image: "url('../imagens/mineirao.png')" }
        ];
        
        document.body.style.backgroundImage = stadiums[index].image; // Muda o fundo
        alert("Estádio escolhido: " + stadiums[index].name);
    }
